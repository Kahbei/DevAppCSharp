@model EnglishBattleApp.Models.QuestionViewModel
@using EnglishBattle.data.Services
@using EnglishBattle.data

<link rel="stylesheet" type="text/css" href="~/Content/question.css" />

@{
    ViewBag.Title = "Question";
    int compteur = Convert.ToInt32(Session["numQuest"]);
    var joueur = (Joueur)Context.Session["joueur"];
    if (joueur != null)
    {
        compteur++;
        Session["numQuest"] = compteur;

        PartieService partieService = new PartieService(new EnglishBattleEntities());
        Partie partie = partieService.GetPartieByJoueur(joueur.id);


        <h2 class="text-center my-4 questionScoreLine">Utilisateur : @joueur.prenom, meilleur score : @partie.score verbes</h2>
        <h1 class="text-center my-4">Question @Session["numQuest"] : le verbe @ViewBag.verbe</h1>
    }
    else
    {
        Response.Redirect("../Account/index");
        
    }
}

@using (Html.BeginForm())
{
    try
    {
        @Html.AntiForgeryToken() //mettre exception
    }
    catch
    {
        //rien
    }

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="d-flex align-items-center my-5">

            <h3 class="text-center col-2">@ViewBag.verbe</h3>

            <div class="form-group col-5" id="preterit">
                @Html.LabelFor(model => model.Preterit, htmlAttributes: new { @class = "text-center" })
                <div class="">
                    @Html.EditorFor(model => model.Preterit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Preterit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-5" id="participePasse">
                @Html.LabelFor(model => model.ParticipePasse, htmlAttributes: new { @class = "text-center" })
                <div class="">
                    @Html.EditorFor(model => model.ParticipePasse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParticipePasse, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        
        <div class="form-group d-flex justify-content-center">
            <input type="submit" value="Valider" class="btn btn-lg btn-dark" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}