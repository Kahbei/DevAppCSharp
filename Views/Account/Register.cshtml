@model EnglishBattleApp.Models.RegisterViewModel
@using EnglishBattle.data.Services
@using EnglishBattle.data

@{
    ViewBag.Title = "Register";
}

<h1 class="text-center mb-4">English Battle Inscription</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="viewBagErreurInscription">@ViewBag.erreurInscription</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Nom -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Prénom -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Email -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Mdp1 -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Mdp2 -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Niveau -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Niveau, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                <select name="niveau" id="niveau-select" class="form-control">
                    <option value="1">Débutant</option>
                    <option value="2">Intermédiaire</option>
                    <option value="3">Expert</option>
                </select>
            </div>
        </div>

        <!-- Villes -->
        <div class="form-group d-flex">
            @Html.LabelFor(model => model.Ville, htmlAttributes: new { @class = "col-2" })
            <div class="col-10">
                @{
                    VilleService villeService = new VilleService(new EnglishBattle.data.EnglishBattleEntities());
                    List<Ville> ville = villeService.GetVilleList();

                    @Html.DropDownListFor(n => n.Ville, new SelectList(ville, "id", "nom"), htmlAttributes: new { @class="form-control" });    //3h30 pour trouver ca

                }
            </div>
        </div>

        <!-- Bouton -->
        <div class="form-group d-flex justify-content-center">
                <input type="submit" value="S'inscrire" class="btn btn-lg btn-dark" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
