@model EnglishBattleApp.Models.LoginViewModel
@using EnglishBattle.data

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/login.css" />

<h1>Bienvenue sur English Battle !</h1>

@{
    Joueur joueur = (Joueur)Context.Session["joueur"];

    if (joueur == null)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2 class="viewBagErreurConnexion">@ViewBag.erreurConnexion</h2>

                <div class="centrer">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div>
                        <input type="submit" value="Connexion" class="btn btn-default" />
                    </div>
                </div>

            </div>
        }
    }
    else
    {
        <h1>ENGLISH BATTLE !!! TUTUTUTU TU TU TU TU !</h1>
    }
}

@*<div>
        @Html.ActionLink("Inscription", "Register")
    </div>*@

<!-- Hall of Fame -->
</br>
<h2>-- Hall of Fame --</h2>
</br>
@using EnglishBattle.data.Services
@using EnglishBattle.data

@{
    PartieService partieService = new PartieService(new EnglishBattle.data.EnglishBattleEntities());
    List<Partie> partie = partieService.GetPartieList();

    foreach (Partie unePartie in partie)
    {
        JoueurService js = new JoueurService(new EnglishBattle.data.EnglishBattleEntities());
        Joueur bestPlayer = js.GetJoueur(unePartie.idJoueur);

        <p>@unePartie.score - @bestPlayer.nom @bestPlayer.prenom</p>
    }
}