@model EnglishBattleApp.Models.LoginViewModel
@using EnglishBattle.data
@using EnglishBattle.data.Services

<section class="loginSection">
    <h1 class="text-center mb-4">Bienvenue sur English Battle !</h1>

    @{
        Joueur joueur = (Joueur)Context.Session["joueur"];

        if (joueur == null)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal d-flex flex-column">
                    <h2 class="viewBagErreurConnexion">@ViewBag.erreurConnexion</h2>

                    <div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group d-flex">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-2" })

                            <div class="w-50">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group d-flex">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-2" })

                            <div class="w-50">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group my-4 d-flex justify-content-center">
                        <input type="submit" value="Connexion" class="btn btn-lg btn-dark" />
                    </div>

                </div>
            }
        }
        else
        {
            var numQuest = Session["numQuest"];
        }

    }

</section>

    @*<div>
            @Html.ActionLink("Inscription", "Register")
        </div>*@

    <!-- Hall of Fame -->
    <section class="mt-5">
        <h1 class="text-center mb-4">The top 10 best parties</h1>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Rank</th>
                    <th scope="col">Score</th>
                    <th scope="col">Finish</th>
                    <th scope="col">Name</th>
                </tr>
            </thead>
            <tbody>
                @{
                    PartieService partieService = new PartieService(new EnglishBattle.data.EnglishBattleEntities());
                    List<Partie> partie = partieService.GetPartieList();
                    int i = 1;

                    foreach (Partie unePartie in partie)
                    {
                        JoueurService js = new JoueurService(new EnglishBattle.data.EnglishBattleEntities());
                        Joueur bestPlayer = js.GetJoueur(unePartie.idJoueur);

                        <tr>
                            <th scope="row">@i</th>
                            <th>@unePartie.score</th>
                            @{
                                if (@unePartie.score == 161)
                                {
                                    <th><i class="bi bi-star-fill"></i></th>
                                }
                                else
                                {
                                    <th> - </th>
                                }
                            }
                            <th>@bestPlayer.nom @bestPlayer.prenom</th>
                        </tr>

                        i++;
                    }
                }
            </tbody>
        </table>
    </section>
